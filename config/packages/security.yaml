security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
        App\Entity\User:
            algorithm: bcrypt

    providers:
        in_memory:
            memory:
                users:
                    ryan:
                        password: $2a$12$LCY0MefVIEc3TYPHV9SNnuzOfyr2p/AXIGoQJEDs4am4JwhNz/jli
                        #ryanpass
                        roles: 'ROLE_USER'
                    admin:
                        #kitten
                        password: $2a$12$cyTWeE9kpq1PjqKFiWUZFuCRPwVyAZwm4XzMZ1qPUFl7/flCM3V0G
                        roles: 'ROLE_ADMIN'
        user_db:
            entity:
                class: App\Entity\User
                property: username
        klient_db:
            entity:
                class: App\Entity\StalyKlient
                property: IdStalegoKlienta
        osoba_db:
            entity:
                class: App\Entity\Osoba
                property: IdOsoby
    firewalls:
        main:
            pattern: ^/
            http_basic: ~
            provider: in_memory #our_db_provider
            anonymous: ~

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
